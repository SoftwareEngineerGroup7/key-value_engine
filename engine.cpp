/*************************************************************************
	> File Name: engine.cpp
	> Author: 
	> Mail: 
	> Created Time: 2018年11月15日 星期四 17时15分53秒
 ************************************************************************/
#include <engine.h> 

//在这里对他的内容进行扩展

/*
 * 键值对的存储
 * 发现redis的内部并没有对冷数据的处理
 * 所以在设计是要对当前存储大小进行计数
 * 当以下情况发生时：
 * 使用LRU算法对冷热数据区分
 * 内存共有4GB 当数据大于4GB时
 * 1.热数据存在内存里
 * 2.冷数据放在磁盘上(计划由另一种数据库来管理)
 * 
 * 热数据的存储形式我打算以std::map
 *
 *
 *``
 * 关于数据的持久化
 * 1.RDB
 *  每隔一段时间，将数据全部存在磁盘上
 * 2.AOF
 *  维护一个队列，记录下所有的操作，恢复时就是将所有队列里边存储的命令
 *  执行一遍，需要一个锁来保持同步，防止数据错乱。
 * */
::RetCode
write (const PolarString& key,
      const PolarString& value) 
{
    //存数据的
    setCommand();
}


read ()
{
    

}
